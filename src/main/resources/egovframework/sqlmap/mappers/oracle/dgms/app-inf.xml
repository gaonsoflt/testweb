<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.dgms.service.impl.AppInfMapper">

	<!-- 사용자 아이디와 비번으로 정보 리턴--> 
	
	<select id="selectUserInfo" parameterType="hashMap" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		SELECT USER_SEQ, AREA_ID, USER_NM, 
		   NVL(MOBILE_NO,A.USER_ID) MOBILE_NO, A.USER_ID, LOGIN_PWD, 
		   SEX, BIRTHDAY, ADDR_CIDO, 
		   ADDR_CIGUNGU, USER_TYPE, USE_YN, 
		   PATIENT_YN, AUTH_TYPE, CRE_USR, 
		   A.CRE_DT, MOD_USR, A.MOD_DT, 
		   ADDR_DETAIL,DEVICE_ID, REG_ID 
	        FROM TB_USER_INFO A LEFT OUTER JOIN TB_MOBILE_INFO B ON A.USER_ID=B.USER_ID AND B.DEVICE_ID =#{deviceid}
	        WHERE 1=1
			AND A.USER_ID = #{id}
			AND LOGIN_PWD = #{pw}
	</select>
	
    <!-- 모바일 장비 정보 등록 -->
	<insert id="insertDeviceInfo" parameterType="hashMap">
		INSERT INTO TB_MOBILE_INFO (
		   DEVICE_ID, USER_ID, REG_ID, 
		   CRE_DT, MOD_DT) 
		VALUES ( #{deviceid},
		 #{id},
		#{regid},
		 sysdate,
		 sysdate )
	</insert>
	
	<!-- 모바일 장비 정보 리턴 -->
	<select id="selectDeviceInfo" parameterType="hashMap" resultType="hashMap">
		SELECT *
		FROM TB_MOBILE_INFO
		WHERE 1=1
			AND USER_ID = #{id}
			AND DEVICE_ID = #{deviceid}
	</select>
	
	<!-- 모바일 장비 정보 업데이트 -->
	<update id="updateDeviceInfo" parameterType="hashMap" >
		 UPDATE TB_MOBILE_INFO
			SET    
				REG_ID    = #{regid},
			    MOD_DT    = SYSDATE
			WHERE  
				USER_ID   = #{id}
				AND    DEVICE_ID = #{deviceid}
				AND #{regid} IS NOT NULL
	</update>
	

    
    <select id="selectMeasureScheduleInfo" parameterType="hashMap" resultType="hashMap">
    	<![CDATA[
		WITH highbldperiod AS
        (
             SELECT MAXV,MINV FROM (
                 SELECT distinct regexp_substr(A.REMARK, '[^,]+', 1, LEVEL) REMARK,ROWNUM ROWNM
                 FROM (select REMARK FROM TB_CODE_MASTER WHERE CD='100771') A
                 CONNECT BY LEVEL <= length(regexp_replace(A.REMARK, '[^,]+',''))+1 
             )
             PIVOT
            (

             MAX(REMARK)
             FOR  ROWNM IN ('1' AS MAXV,'2' AS MINV)
            )
            ORDER BY ROWNUM

        ),lowbldperiod AS
        (
             SELECT MAXV,MINV FROM (
                 SELECT distinct regexp_substr(A.REMARK, '[^,]+', 1, LEVEL) REMARK,ROWNUM ROWNM
                 FROM (select REMARK FROM TB_CODE_MASTER WHERE CD='100773') A
                 CONNECT BY LEVEL <= length(regexp_replace(A.REMARK, '[^,]+',''))+1 
             )
             PIVOT
            (

             MAX(REMARK)
             FOR  ROWNM IN ('1' AS MAXV,'2' AS MINV)
            )
            ORDER BY ROWNUM
        )
        SELECT GUBUN,MAX(ACTION_DATE) ACTION_DATE,SACTION_DATE,SUM(STATE) STATE,MAX(SEQ) SEQ FROM (
        SELECT '0' gubun,MEASURE_DT action_date,TO_CHAR(MEASURE_DT,'YYYY-MM-DD') saction_date
        ,CASE WHEN MAX_BLDPRS >TO_NUMBER((SELECT MAXV FROM highbldperiod)) OR MIN_BLDPRS >TO_NUMBER((SELECT MINV FROM highbldperiod)) 
        OR MAX_BLDPRS <TO_NUMBER((SELECT MAXV FROM lowbldperiod)) OR MIN_BLDPRS <TO_NUMBER((SELECT MINV FROM lowbldperiod)) THEN 1 ELSE 0 END state
        ,CASE WHEN MAX_BLDPRS >TO_NUMBER((SELECT MAXV FROM highbldperiod)) OR MIN_BLDPRS >TO_NUMBER((SELECT MINV FROM highbldperiod)) 
        OR MAX_BLDPRS <TO_NUMBER((SELECT MAXV FROM lowbldperiod)) OR MIN_BLDPRS <TO_NUMBER((SELECT MINV FROM lowbldperiod)) THEN '이상혈압' ELSE '정상혈압' END dsc,BLDPRS_SEQ SEQ FROM TB_BLDPRS_MEASURE_IF A        
        WHERE TO_CHAR(MEASURE_DT,'YYYY-MM-DD') >=#{month}||'-01' AND TO_CHAR(MEASURE_DT,'YYYY-MM-DD') <#{nmonth}||'-01'
        AND (USER_ID=#{user_id} OR USER_ID IN(SELECT USER_ID FROM TB_GROUP_MNG WHERE PAT_RELATION='100777' AND TRIM(GRPMBR_ID)=#{user_id}))
        UNION
        SELECT '1' gubun,MEASURE_DT action_date,TO_CHAR(MEASURE_DT,'YYYY-MM-DD') saction_date
        ,CASE WHEN UNUSUAL_CNT>0 THEN 1 ELSE 0 END state
        ,CASE WHEN UNUSUAL_CNT>0 THEN '이상심박' ELSE '정상심박' END dsc,ECG_SEQ FROM TB_ECG_MEASURE_IF 
        WHERE TO_CHAR(MEASURE_DT,'YYYY-MM-DD') >=#{month}||'-01' AND TO_CHAR(MEASURE_DT,'YYYY-MM-DD') <#{nmonth}||'-01'
        AND (USER_ID=#{user_id} OR USER_ID IN(SELECT USER_ID FROM TB_GROUP_MNG WHERE PAT_RELATION='100777' AND TRIM(GRPMBR_ID)=#{user_id}))
        UNION
        SELECT '2' gubun,To_DATE(TAKE_DT,'yyyy-mm-dd HH24:MI:SS') action_date,TO_CHAR(To_DATE(TAKE_DT,'yyyymmddHH24MISS'),'YYYY-MM-DD') saction_date
        ,CASE WHEN TAKE_STATE NOT IN ('TAKEN') THEN 1 ELSE 0 END state
        ,CASE WHEN TAKE_STATE NOT IN ('TAKEN') THEN '오복용' ELSE '정상복용' END dsc,TAKE_MEDC_SEQ FROM TB_TAKE_MEDC_IF 
        WHERE TO_CHAR(To_DATE(TAKE_DT,'yyyymmddHH24MISS'),'YYYY-MM-DD') >=#{month}||'-01' AND TO_CHAR(To_DATE(TAKE_DT,'yyyymmddHH24MISS'),'YYYY-MM-DD') <#{nmonth}||'-01'
        AND EQUIPMENT_ID IN(SELECT EQUIPMENT_ID FROM TB_RENT_MNG A LEFT OUTER JOIN TB_EQUIPMENT_INFO B ON A.EQUIPMENT_SEQ=B.EQUIPMENT_SEQ
                         WHERE 1=1 AND EQUIP_TYPE='100756' AND (USER_ID=#{user_id} OR USER_ID IN(SELECT USER_ID FROM TB_GROUP_MNG WHERE PAT_RELATION='100777' AND TRIM(GRPMBR_ID)=#{user_id})))
        UNION
        SELECT '3' gubun,To_DATE(MEASURE_DT,'yyyy-mm-dd HH24:MI:SS') action_date,TO_CHAR(TO_DATE(MEASURE_DT,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') saction_date
        ,CASE WHEN (NVL(FREQ_CNT,0)+NVL(INFREQ_CNT,0)+NVL(PVC_CNT,0))>0 THEN 1 ELSE 0 END state
        ,CASE WHEN (NVL(FREQ_CNT,0)+NVL(INFREQ_CNT,0)+NVL(PVC_CNT,0))>0 THEN '이상심박' ELSE '정상심박' END dsc,ECG_SEQ FROM TB_ACTECG_MEASURE_IF 
        WHERE TO_CHAR(TO_DATE(MEASURE_DT,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD') >=#{month}||'-01' AND TO_CHAR(TO_DATE(MEASURE_DT,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD') <#{nmonth}||'-01'
        AND (USER_ID=#{user_id} OR USER_ID IN(SELECT USER_ID FROM TB_GROUP_MNG WHERE PAT_RELATION='100777' AND TRIM(GRPMBR_ID)=#{user_id}))
        )
        GROUP BY GUBUN,SACTION_DATE
        ORDER BY ACTION_DATE ASC
        ]]>
    </select>
    
    
    <!-- 모바일 알림(PUS) 정보 등록 -->
	<insert id="insertMobilePushInfo" parameterType="hashMap">
		INSERT INTO TB_MOBILE_PUSH_INFO (
		   PUSH_ID, SYS_GUBUN, MOBILE_NO, 
		   USER_SEQ, TITLE, CONT, 
		   LINK, CRE_DT, SEND_FLAG) 
		VALUES ( sys_guid(),
		 #{sys_gubun},
		#{mobile_no},
		#{user_seq},
		#{title},
		#{cont},
		#{link},
		 sysdate,
		 'N' )
	</insert>
	<!-- 모바일 알림(PUS) 정보 업데이트 -->
	<update id="updateMobilePushInfo" parameterType="hashMap" >
		 UPDATE TB_MOBILE_PUSH_INFO
			SET    
				SEND_FLAG    = #{send_state},
			    SEND_DT    = SYSDATE
			WHERE  
				PUSH_ID   = #{push_id}
	</update>
	<!-- 방송하지 않은 Push 정보 조회 -->
	<select id="selectNotSendMobilePushInfo" parameterType="hashMap" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		SELECT  PUSH_ID, SYS_GUBUN, A.MOBILE_NO, 
		   A.USER_SEQ, TITLE, CONT, 
		   LINK,B.USER_NM,B.AREA_ID
        FROM TB_MOBILE_PUSH_INFO A JOIN TB_USER_INFO B ON A.USER_SEQ=B.USER_SEQ
        WHERE 1=1
            AND SEND_FLAG = 'N' AND to_char(A.CRE_DT,'yyyy-mm-dd')>to_char(sysdate - 2,'yyyy-mm-dd')
	</select>
	
	<!-- GPS 정보 등록 -->
	<insert id="insertGPSInfo" parameterType="hashMap">
		INSERT INTO TB_GPS_INFO (
		   GPS_SEQ, USER_ID, GPS_LAT, 
		   GPS_LON, CRE_USR, CRE_DT, 
		   MOD_USR, MOD_DT) 
		VALUES ( SEQ_GPS_INFO.nextval,#{user_id},
		 #{gps_lat},
		 #{gps_lon},
		#{cre_usr},
		sysdate,
		#{cre_usr},
		 sysdate)
	</insert>

	<!-- 마지막 GPS 정보 조회 -->
	<select id="selectLastGPSInfo" parameterType="hashMap" resultType="hashMap">
		SELECT   * 
		FROM(
			SELECT   GPS_SEQ, A.USER_ID, GPS_LAT, 
	           GPS_LON, A.CRE_USR, A.CRE_DT,TO_CHAR(A.CRE_DT,'yyyy-mm-dd HH24:MI:SS') SCRE_DT,B.MOBILE_NO,USER_NM
	        FROM TB_GPS_INFO A JOIN TB_USER_INFO B ON A.USER_ID=B.USER_ID
	        WHERE 1=1
	            AND ((A.USER_ID=#{user_id} AND B.PATIENT_YN='1') OR A.USER_ID IN(SELECT USER_ID FROM TB_GROUP_MNG WHERE (PAT_RELATION='100777' OR PAT_RELATION='100778') AND TRIM(GRPMBR_ID)=#{user_id})) 
	            ORDER BY CRE_DT DESC)
	    WHERE 1=1
	    	AND ROWNUM=1
	</select>
	
	<!-- 그룹 조회 -->
	<select id="getGroupMemberInfo" parameterType="hashMap" resultType="hashMap">
		SELECT  DISTINCT A.*
		FROM TB_USER_INFO A, 
	    (
	    	SELECT  B.*
	        FROM TB_GROUP_MNG B,
	        (
	          SELECT  DISTINCT USER_ID
	          FROM TB_GROUP_MNG
	          WHERE USER_ID=#{user_id}
	          	OR GRPMBR_ID=#{user_id}
	        ) C
			WHERE B.USER_ID=C.USER_ID
		) D
		WHERE TRIM(A.USER_ID)=TRIM(D.USER_ID) 
	    	OR TRIM(A.USER_ID)=TRIM(D.GRPMBR_ID)
	</select>
	
	<!-- 처방 정보 조회 -->
	<select id="selectMyPrescriptInfo" parameterType="hashMap" resultType="hashMap">
		SELECT	PRSC_SEQ, 
				USER_ID,
				PRSC_STDT,
				PRSC_PERIOD
		FROM	TB_PRESCRIPT_IF
		WHERE	USER_ID = #{user_id}
				AND PRSC_STDT =#{start_date}
				AND ROWNUM=1
            	ORDER BY PRSC_STDT ASC
    </select>
    
    <!-- 처방 정보 등록 -->
	<insert id="insertMyPrescriptInfo" >
	    INSERT INTO TB_PRESCRIPT_IF
	      (PRSC_SEQ, USER_ID, PRSC_STDT, PRSC_PERIOD, APPLY_YN, AREA_ID, CRE_USR, CRE_DT)
	    VALUES
	      (  SEQ_PRESCRIPT_IF.NEXTVAL,
	       #{user_id, jdbcType=VARCHAR},
	       #{start_date, jdbcType=VARCHAR},
	       #{period, jdbcType=INTEGER},
	       'Y',
	       #{area_id, jdbcType=VARCHAR},
	       #{user_id, jdbcType=VARCHAR},
	       SYSDATE
	       ) 
	</insert>
	
	<!-- 처방 약품 정보 등록 -->
	<insert id="insertMyPrescriptMedcInfo" >
	    INSERT INTO TB_PRESCRIPT_MEDC_IF
	      (PRSCMEDC_SEQ, PRSC_SEQ, PRSCMEDC_CD, PRSCMEDC_NM, DOSAGE, DOSAGE_ONCE, DOSAGE_ONCE_DAY, USAGE, CRE_USR, CRE_DT)
	    VALUES
	      (  SEQ_PRESCRIPT_MEDC_IF.NEXTVAL,
	       #{PRSC_SEQ, jdbcType=VARCHAR},
	       #{PRSCMEDC_CD, jdbcType=VARCHAR},
	       #{PRSCMEDC_NM, jdbcType=VARCHAR},
	       #{DOSAGE, jdbcType=INTEGER},
	       #{DOSAGE_ONCE, jdbcType=INTEGER},
	       #{DOSAGE_ONCE_DAY, jdbcType=INTEGER},
	       #{USAGE, jdbcType=VARCHAR},
	       #{CRE_USR, jdbcType=VARCHAR},
	       SYSDATE
	       ) 
	</insert>
	<!-- 약정보  등록 -->
	<insert id="insertDrugInfo">
	
		INSERT INTO TB_DRUG_INFO (
		   DRUG_KO_NM, VENDOR_NM, DRUG_KUYGYUC, 
		   TOT_CNT, JEAHYOUNG_GUBUN, PACKING_TYPE, 
		   BASIC_CD, APPROVAL_DT, DRUG_TYPE, 
		   REPRESENT_CD, STANDARD_CD, DRUG_CD, 
		   COMMON_CD, ETC, CANCEL_DT, 
		   NOTICE_START_DT, NOTICE_END_DT, NUM_CANCEL_YN, 
		   NUM_DESC, ACT_CD) 
		VALUES ( #{DRUG_KO_NM},
		 NVL(#{VENDOR_NM},''),
		 NVL(#{DRUG_KUYGYUC},''),
		 NVL(#{TOT_CNT},''),
		 NVL(#{JEAHYOUNG_GUBUN},''),
		 NVL(#{PACKING_TYPE},''),
		 NVL(#{BASIC_CD},''),
		 NVL(#{APPROVAL_DT},''),
		 NVL(#{DRUG_TYPE},''),
		 NVL(#{REPRESENT_CD},''),
		 NVL(#{STANDARD_CD},''),
		 NVL(#{DRUG_CD},''),
		 NVL(#{COMMON_CD},''),
		 NVL(#{ETC},''),
		 NVL(#{CANCEL_DT},''),
		 NVL(#{NOTICE_START_DT},''),
		 NVL(#{NOTICE_END_DT},''),
		 NVL(#{NUM_CANCEL_YN},''),
		 NVL(#{NUM_DESC},''),
		 NVL(#{ACT_CD},'') )
	</insert>
	
	<!-- 약정보  검색 -->
	<select id="selectDrugInfo" parameterType="hashMap" resultType="hashMap">
	        SELECT	DRUG_KO_NM, 
				BASIC_CD,
				DRUG_CD
		FROM	TB_DRUG_INFO
		WHERE	1=1
        AND DRUG_KO_NM LIKE #{drug_name}
        AND ROWNUM=1
    </select>
	
	<!-- 문진표 출력 -->
	<select id="selectMedcInquiryAnswer" parameterType="hashMap" resultType="hashMap">
        SELECT  
		        (SELECT COUNT(*) FROM TB_INQUIRY_MANSWER A LEFT OUTER JOIN TB_INQUIRY_SANSWER B ON A.MANSWER_SEQ = B.MANSWER_SEQ WHERE    A.CRE_USR = #{user_id}) AS CNT,
		        A.*,
		        B.*
		FROM    TB_INQUIRY_MANSWER A
		        LEFT OUTER JOIN TB_INQUIRY_SANSWER B
		        ON A.MANSWER_SEQ = B.MANSWER_SEQ
		WHERE   A.CRE_USR = #{user_id} 
		ORDER BY MQUESTION_NUMBER ASC
    </select>
    
	<!-- 문진표 입력 -->
	<insert id="insertMedcInquiryManswer" >
	    INSERT INTO TB_INQUIRY_MANSWER
	      (MANSWER_SEQ, INQUIRY_NAME, MAIN_ANSWER, CRE_USR, CRE_DT)
	    VALUES
	      (  
	       #{MANSWER_SEQ, jdbcType=VARCHAR},
	       #{INQUIRY_NAME, jdbcType=VARCHAR},
	       #{MAIN_ANSWER, jdbcType=VARCHAR},
	       #{CRE_USR, jdbcType=VARCHAR}, 
	       SYSDATE
	       ) 
	</insert>
	
	<!-- 문진표 입력2 -->
	<insert id="insertMedcInquirySanswer" >
	    INSERT INTO TB_INQUIRY_SANSWER
	      (SANSWER_SEQ, MANSWER_SEQ, MQUESTION_NUMBER, SUB_ANSWER)
	    VALUES
	      (  
	       SEQ_TB_INQUIRY_SANSWER.NEXTVAL,
	       #{MANSWER_SEQ, jdbcType=VARCHAR},
	       #{MQUESTION_NUMBER, jdbcType=VARCHAR},
	       #{SUB_ANSWER, jdbcType=VARCHAR}
	       ) 
	</insert>
	
	<!-- 문진표 업데이트 -->
	<update id="updateMedcInquiryManswer" >
	    UPDATE TB_INQUIRY_MANSWER
	    SET MAIN_ANSWER = #{MAIN_ANSWER, jdbcType=VARCHAR},
	    	MOD_USR = #{CRE_USR, jdbcType=VARCHAR},
	    	MOD_DT = SYSDATE
	    WHERE MANSWER_SEQ = #{MANSWER_SEQ, jdbcType=VARCHAR}
	</update>
	
	<!-- 문진표 입력2 -->
	<update id="updateMedcInquirySanswer" >
	    UPDATE TB_INQUIRY_SANSWER
	    SET SUB_ANSWER = #{SUB_ANSWER, jdbcType=VARCHAR}
	    WHERE MQUESTION_NUMBER = #{MQUESTION_NUMBER, jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteMedcInquirySanswer">
		DELETE FROM TB_INQUIRY_SANSWER
		WHERE 
				MANSWER_SEQ = #{MANSWER_SEQ}
				AND MQUESTION_NUMBER = #{MQUESTION_NUMBER}
	</delete>
	
	
</mapper>
