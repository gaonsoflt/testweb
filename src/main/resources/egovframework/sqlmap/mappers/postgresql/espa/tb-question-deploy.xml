<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.espa.service.impl.QuestionDeployMapper">

	<select id="readDeployList" parameterType="map" resultType="map">
		SELECT *
		FROM (
			SELECT (ROW_NUMBER() OVER()) AS RNUM, A.*
			FROM (
				SELECT
					A.deploy_seq,
					A.question_seq, 
					A.group_id,
					<![CDATA[
					CASE WHEN A.submit_from > now() THEN '대기' WHEN A.submit_to < now() THEN '마감' ELSE '진행중' end as status,
					]]>
					B.cd_nm as group_name,
					A.submit_from,
					A.submit_to,
					A.max_submit_cnt,
					(SELECT COUNT(*) FROM TB_QUESTION_CANDIDATE WHERE deploy_seq = A.deploy_seq) as candidate,
					A.title,
					C.title as question_title,
					C.lang_type as question_language
				FROM TB_QUESTION_DEPLOY A 
				INNER JOIN TB_CODE_MASTER B ON A.GROUP_ID = B.CD_ID
				INNER JOIN TB_QUESTION C ON A.QUESTION_SEQ = C.QUESTION_SEQ 
			) A
		) A
		WHERE 1 = 1
		<if test='PAGE != null'>
		<![CDATA[
			AND A.RNUM > (#{PAGE} - 1) * #{PAGESIZE}
			AND A.RNUM <= #{PAGE} * #{PAGESIZE}
    	]]>
		</if>
		ORDER BY group_name, submit_from, submit_to
	</select>
	
	<select id="readDeploy" parameterType="map" resultType="map">
		SELECT
			A.deploy_seq,
			A.question_seq, 
			A.group_id,
			<![CDATA[
				CASE WHEN A.submit_from > now() THEN '대기' WHEN A.submit_to < now() THEN '마감' ELSE '진행중' end as status,
			]]>
			B.cd_nm as group_name,
			A.submit_from,
			A.submit_to,
			A.max_submit_cnt,
			A.title,
			C.title as question_title,
			C.lang_type as question_language
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_CODE_MASTER B ON A.GROUP_ID = B.CD_ID
		INNER JOIN TB_QUESTION C ON A.QUESTION_SEQ = C.QUESTION_SEQ 
		WHERE deploy_seq = CAST(#{deploy_seq} as integer) 
	</select>
	
	<select id="readDeployAllCount" parameterType="map" resultType="integer">
		SELECT count(*)
		FROM TB_QUESTION_DEPLOY A 
		inner join tb_code_master B on A.group_id = B.cd_id
		inner join tb_question C on A.question_seq = C.question_seq 
	</select>
	
	<insert id="createDeploy">
		<selectKey keyProperty="deploy_seq" resultType="integer" order="AFTER">
			select currval('sq_tb_question_deploy') as question_seq
		</selectKey>
		INSERT INTO TB_QUESTION_DEPLOY (
			deploy_seq,
			title,
			question_seq,
			group_id, 
			submit_from,
			submit_to,
			max_submit_cnt
		) VALUES (
			nextval('sq_tb_question_deploy'), 
			#{title}, 
			cast(#{question_seq} as integer), 
			#{group_id}, 
			to_timestamp(#{submit_from}, 'YYYY-MM-DD HH24:MI'),
			to_timestamp(#{submit_to}, 'YYYY-MM-DD HH24:MI'),
			cast(#{max_submit_cnt} as integer)
		)
	</insert>
	
	<update id="updateDeploy">
		UPDATE tb_question_deploy
		SET 
			question_seq = cast(#{question_seq} as integer),
			title = #{title},  
			group_id = #{group_id},  
			submit_from = to_timestamp(#{submit_from}, 'YYYY-MM-DD HH24:MI'),
			submit_to = to_timestamp(#{submit_to}, 'YYYY-MM-DD HH24:MI'),
			max_submit_cnt = cast(#{max_submit_cnt} as integer)
		WHERE deploy_seq = cast(#{deploy_seq} as integer)
	</update>
	
	<delete id="deleteDeploy">
		DELETE FROM tb_question_deploy 
		WHERE deploy_seq = CAST(#{deploy_seq} as integer) 
	</delete>
	
	<select id="readDeployedQuestionList" parameterType="map" resultType="map">
		SELECT
			A.deploy_seq,
			A.question_seq, 
			A.group_id,
			<![CDATA[CASE WHEN A.submit_to < now() THEN '마감' ELSE '진행중' end as status,]]>
			B.cd_nm as group_name,
			A.submit_from,
			A.submit_to,
			A.max_submit_cnt,
			A.title,
			C.title as question_title,
			C.lang_type,
			C.max_codesize,
			(select Count(*) FROM tb_question_candidate where deploy_seq = a.deploy_seq) as candidate,
			(select count(distinct(user_seq)) From tb_question_answer_his where deploy_seq = a.deploy_seq) as submit_user
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_CODE_MASTER B ON A.GROUP_ID = B.CD_ID
		INNER JOIN TB_QUESTION C ON A.QUESTION_SEQ = C.QUESTION_SEQ
		<![CDATA[WHERE A.submit_from < now()]]>
		ORDER BY group_name, submit_from, submit_to
	</select>
		
	<select id="readDeployedQuestionDetail" parameterType="map" resultType="map">
		SELECT 
			A.deploy_seq,
			A.question_seq,
			A.title,
			A.submit_from,
			A.submit_to,
			A.max_submit_cnt,
			<![CDATA[CASE WHEN A.submit_to < now() THEN '마감' ELSE '진행중' end as status,]]>
			B.TITLE AS QUESTION_TITLE,
			B.CON_QUESTION AS QUESTION,
			B.CON_IO AS QUESTION_IO,
			B.CON_EXAMPLE AS QUESTION_EXAMPLE,
			B.CON_HINT AS QUESTION_HINT,
			B.LANG_TYPE,
			B.TIMEOUT AS TIMEOUT,
			B.BAN_KEYWORD AS BAN_KEYWORD,
			B.MAX_CODESIZE AS MAX_CODESIZE
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_QUESTION B ON A.QUESTION_SEQ = B.QUESTION_SEQ
		WHERE A.DEPLOY_SEQ = CAST(#{deploy_seq} AS INTEGER)
	</select>
	
	<select id="readDeployedQuestionListByUser" parameterType="map" resultType="map">
		SELECT
			A.deploy_seq,
			A.question_seq, 
			A.group_id,
			<![CDATA[CASE WHEN A.submit_to < now() THEN '마감' ELSE '진행중' end as status,]]>
			B.cd_nm as group_name,
			A.submit_from,
			A.submit_to,
			A.max_submit_cnt,
			(select count(*) from tb_question_answer_his where user_seq = cast(#{user_seq} as integer) and deploy_seq = A.deploy_seq) as user_submit_cnt,
			A.title,
			C.title as question_title,
			C.max_codesize,
			C.lang_type
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_CODE_MASTER B ON A.GROUP_ID = B.CD_ID
		INNER JOIN TB_QUESTION C ON A.QUESTION_SEQ = C.QUESTION_SEQ
		<![CDATA[WHERE A.submit_from < now()]]>
		AND deploy_seq IN (SELECT deploy_seq FROM tb_question_candidate WHERE user_seq = cast(#{user_seq} as integer))
		ORDER BY group_name, submit_from, submit_to
	</select>
	
	<select id="readDeployedQuestionDetailByUser" parameterType="map" resultType="map">
		SELECT 
			A.deploy_seq,
			A.question_seq,
			A.title,
			A.submit_from,
			A.submit_to,
			A.max_submit_cnt,
			(SELECT COUNT(*) FROM TB_QUESTION_ANSWER_HIS WHERE USER_SEQ = CAST(#{user_seq} AS INTEGER) AND DEPLOY_SEQ = A.DEPLOY_SEQ) AS USER_SUBMIT_CNT,
			B.TITLE AS QUESTION_TITLE,
			B.CON_QUESTION AS QUESTION,
			B.CON_IO AS QUESTION_IO,
			B.CON_EXAMPLE AS QUESTION_EXAMPLE,
			B.CON_HINT AS QUESTION_HINT,
			B.LANG_TYPE,
			B.TIMEOUT AS TIMEOUT,
			B.BAN_KEYWORD AS BAN_KEYWORD,
			B.MAX_CODESIZE AS MAX_CODESIZE,
			C.ANSWER,
			C.SUBMIT_DT,
			C.USER_SEQ
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_QUESTION B ON A.QUESTION_SEQ = B.QUESTION_SEQ
		LEFT JOIN (
			(
				WITH LATEST_ANSWER AS (
					SELECT 
						*,
						ROW_NUMBER() OVER(ORDER BY SUBMIT_DT DESC) AS RK
					FROM TB_QUESTION_ANSWER_HIS
					WHERE USER_SEQ = CAST(#{user_seq} AS INTEGER)
					AND DEPLOY_SEQ = CAST(#{deploy_seq} AS INTEGER)
				)
				SELECT * FROM LATEST_ANSWER WHERE RK = 1
			)
		) C ON A.DEPLOY_SEQ = C.DEPLOY_SEQ 
		WHERE A.DEPLOY_SEQ = CAST(#{deploy_seq} AS INTEGER)
	</select>
	
	<select id="readAvailableDeployedQuestion" parameterType="map" resultType="integer">
		SELECT
			COUNT(*)
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_CODE_MASTER B ON A.GROUP_ID = B.CD_ID
		<![CDATA[WHERE A.submit_to >= now()]]>
		AND deploy_seq IN (SELECT deploy_seq FROM tb_question_candidate WHERE user_seq = cast(#{user_seq} as integer))
		AND A.deploy_seq = cast(#{deploy_seq} as integer)
	</select>
	
	<select id="readGroupsOfAvailableDeployedQuestion" parameterType="map" resultType="map">
		SELECT
			distinct(B.cd_nm) as group_name
		FROM TB_QUESTION_DEPLOY A 
		INNER JOIN TB_CODE_MASTER B ON A.GROUP_ID = B.CD_ID
		<![CDATA[WHERE A.submit_from < now()]]>
		<if test="user_seq != null">
		AND deploy_seq IN (SELECT deploy_seq FROM tb_question_candidate WHERE user_seq = cast(#{user_seq} as integer))
		</if> 
		ORDER BY group_name
	</select>
</mapper>
