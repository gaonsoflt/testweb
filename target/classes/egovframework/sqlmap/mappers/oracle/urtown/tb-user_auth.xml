<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.urtown.service.impl.UserAuthMapper">

	<select id="selectUserAuthByUserType" parameterType="hashMap" resultType="hashMap">
		SELECT 
			AUTH_SQ,
			AREA_GB,
			USER_NO,
			USER_TYPE,
			MENU_SQ,
			AUTH_C,
			AUTH_R,
			AUTH_U,
			AUTH_D
		FROM TB_USER_AUTH
  			WHERE USER_TYPE = (SELECT USER_TYPE FROM TB_USER_INFO WHERE USER_SEQ = #{USER_NO});
    </select>
  			
  			
	<select id="selectUserAuth" parameterType="hashMap" resultType="hashMap">
		SELECT * 
			FROM (
				SELECT
  					T.MENU_SQ,
        			M.MENU_NM AS MAIN_NM,
					T.MENU_NM,
					T.MENU_ID,
					DECODE(T.USE_YN, '1', 'true', 'false') AS USE_YN,
					T.AREA_GB
				FROM TB_MENU_INFO T, TB_MENU_INFO M
					WHERE T.AREA_GB = #{AREA_GB}
		  			AND T.AREA_GB = M.AREA_GB
		  			AND T.PARENT_SQ = M.MENU_SQ
		  			AND T.USE_YN = 1 AND M.USE_YN = 1
				ORDER BY M.MENU_ORDER, T.MENU_ORDER
			) A, (
				SELECT 
		    		AUTH_SQ,
				  	USER_NO,
					USER_TYPE,
					MENU_SQ,
					DECODE(AUTH_C, '1', 'true', 'false') AS AUTH_C,
					DECODE(AUTH_R, '1', 'true', 'false') AS AUTH_R,
					DECODE(AUTH_U, '1', 'true', 'false') AS AUTH_U,
					DECODE(AUTH_D, '1', 'true', 'false') AS AUTH_D
				FROM TB_USER_AUTH
				  	WHERE 1=1
				  	<if test="TYPE.equals('USER_TYPE')">
					  	AND USER_TYPE = #{USER_TYPE}
					</if> 
				  	<if test="TYPE.equals('USER_NO')">
					  	AND USER_NO = #{USER_NO}
					</if> 
		  	) B
			WHERE A.MENU_SQ = B.MENU_SQ(+)
	</select>
    
   	<update id="updateInsertUserAuth">
		MERGE INTO TB_USER_AUTH T
  			USING DUAL
  				ON (
	  				T.AREA_GB = #{AREA_GB} 
	  				<if test="TYPE.equals('USER_NO')">
	  					AND T.USER_NO = #{USER_NO} 
	  				</if>
	  				<if test="TYPE.equals('USER_TYPE')">
	  					AND T.USER_TYPE = #{USER_TYPE} 
	  				</if>
	  				AND T.MENU_SQ = #{MENU_SQ}
  				)
			WHEN MATCHED THEN
				UPDATE SET
					T.AUTH_C = #{AUTH_C			, jdbcType=VARCHAR},
					T.AUTH_R = #{AUTH_R			, jdbcType=VARCHAR}, 
					T.AUTH_U = #{AUTH_U			, jdbcType=VARCHAR}, 
					T.AUTH_D = #{AUTH_D			, jdbcType=VARCHAR}
  			WHEN NOT MATCHED THEN
			    INSERT (
					T.AUTH_SQ,
					T.AREA_GB,
					<if test="TYPE.equals('USER_NO')">
						T.USER_NO,
					</if>
					<if test="TYPE.equals('USER_TYPE')">
						T.USER_TYPE,
					</if>
					T.MENU_SQ,
					T.AUTH_C,
					T.AUTH_R,
					T.AUTH_U,
					T.AUTH_D
			    ) VALUES (
			     	#{AUTH_SQ			, jdbcType=NUMERIC},
					#{AREA_GB			, jdbcType=VARCHAR},
					<if test="TYPE.equals('USER_NO')">
						#{USER_NO			, jdbcType=NUMERIC},
					</if>
					<if test="TYPE.equals('USER_TYPE')">
						#{USER_TYPE			, jdbcType=VARCHAR},
					</if>
					#{MENU_SQ			, jdbcType=NUMERIC},
					#{AUTH_C			, jdbcType=VARCHAR},
					#{AUTH_R			, jdbcType=VARCHAR},
					#{AUTH_U			, jdbcType=VARCHAR},
					#{AUTH_D			, jdbcType=VARCHAR}
			    )
	</update>
	
	<select id="getUserAuth" parameterType="hashMap" resultType="hashMap">
		SELECT 
			A.MENU_SQ,
			(SELECT MENU_ID FROM TB_MENU_INFO WHERE MENU_SQ = A.MENU_SQ AND AREA_GB = #{AREA_GB}) AS MENU_ID,
			A.USER_NO,
			A.USER_TYPE,
			DECODE(DECODE(A.AUTH_C, 1, 1, 0) + DECODE(B.AUTH_C, 1, 1, 0), 0, 'false', 'true') AS AUTH_C,
			DECODE(DECODE(A.AUTH_R, 1, 1, 0) + DECODE(B.AUTH_R, 1, 1, 0), 0, 'false', 'true') AS AUTH_R,
			DECODE(DECODE(A.AUTH_U, 1, 1, 0) + DECODE(B.AUTH_U, 1, 1, 0), 0, 'false', 'true') AS AUTH_U,
			DECODE(DECODE(A.AUTH_D, 1, 1, 0) + DECODE(B.AUTH_D, 1, 1, 0), 0, 'false', 'true') AS AUTH_D
		FROM (
			SELECT 
				MENU_SQ,
				USER_NO,
				USER_TYPE,
				AUTH_C,
				AUTH_R,
				AUTH_U,
				AUTH_D
			FROM TB_USER_AUTH
				WHERE USER_TYPE = (SELECT USER_TYPE FROM TB_USER_INFO WHERE USER_SEQ = #{USER_NO})
				AND AREA_GB = #{AREA_GB}) A 
		JOIN (
			SELECT 
				MENU_SQ,
				USER_NO,
				USER_TYPE,
				AUTH_C,
				AUTH_R,
				AUTH_U,
				AUTH_D
			FROM TB_USER_AUTH
				WHERE USER_NO = #{USER_NO}) B
		ON A.MENU_SQ = B.MENU_SQ(+)
			WHERE A.MENU_SQ = (SELECT MENU_SQ FROM TB_MENU_INFO WHERE MENU_ID = #{MENU_ID} AND AREA_GB = #{AREA_GB})
    </select>
</mapper>
