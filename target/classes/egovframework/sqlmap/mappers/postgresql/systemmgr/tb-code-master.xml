<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.systemmgr.service.impl.SystemMgrCodeMapper">

	<select id="selectMngCodeMasterInfo" parameterType="hashMap" resultType="hashMap">
		with recursive vi_search_code as (
			select 
				array[c.cd] as hierarchy,
				c.cd,
				c.catgr,
				c.cd_nm,
				c.sort_no,
				CASE WHEN c.use_yn='1' THEN true ELSE false end use_yn
			from
				tb_code_master c
			where 
				catgr = '0'
			union all
			select 
				sc.hierarchy || c.cd,
				c.cd,
				c.catgr,
				c.cd_nm,
				c.sort_no,
				CASE WHEN c.use_yn='1' THEN true ELSE false end use_yn
			from	
				tb_code_master c join vi_search_code sc
			on
				c.catgr= cast(sc.cd as varchar)
		)
		select 
			cd, catgr, cd_nm, sort_no, use_yn 
		from 
			vi_search_code
		where 
		<![CDATA[ 
			array_length(hierarchy, 1) <= 2
		]]>
			<if test='CATGR_NM != null'>
				AND CD_NM LIKE '%' || #{CATGR_NM} || '%'
			</if>
			order by hierarchy
	</select>
	
	<!--select id="selectMngCodeMasterInfo" parameterType="hashMap" resultType="hashMap">
		SELECT 
			A.CD, 
			A.CATGR, 
			A.CD_NM, 
			A.SORT_NO,
			CASE WHEN A.USE_YN='1' THEN true ELSE false END USE_YN
		FROM TB_CODE_MASTER A, (
			SELECT 
				DISTINCT(CATGR) 
			FROM 
				TB_CODE_MASTER
			) B
		WHERE A.CD = B.CATGR
		<if test='CATGR_NM != null'>
			AND A.CD_NM LIKE '%' || #{CATGR_NM} || '%'
		</if>
	</select-->

	<select id="selectMngCodeInfo" parameterType="hashMap" resultType="hashMap">
		SELECT *
		FROM (
			SELECT (ROW_NUMBER() OVER()) AS RNUM, A.*
			FROM (
				SELECT CD ,
					CATGR ,
					CD_NM ,
					CD_ID ,
					SORT_NO ,
					CASE WHEN USE_YN='1' THEN true ELSE false end USE_YN,
					REMARK ,
					CRE_USR ,
					CRE_DT ,
					MOD_USR ,
					MOD_DT
				FROM TB_CODE_MASTER
				WHERE 1=1
				<if test='CATGR != null'>
					AND CATGR = #{CATGR}
				</if>
				ORDER BY SORT_NO
			) A
		) A
		WHERE 1 = 1
		<if test='PAGE != null'>
		<![CDATA[
	       AND A.RNUM > (#{PAGE} - 1) * #{PAGESIZE}
	       AND A.RNUM <= #{PAGE} * #{PAGESIZE}
    	]]>
		</if>
	</select>

	<insert id="insertMngCodeInfo">
		INSERT INTO TB_CODE_MASTER (
			CD, 
			CATGR, 
			CD_NM, 
			CD_ID, 
			SORT_NO,
			USE_YN, 
			REMARK, 
			CRE_USR, 
			CRE_DT,
			MOD_USR, 
			MOD_DT
		) VALUES (
			nextval('sq_tb_code_master'),
			#{catgr},
			#{cd_nm},
			#{cd_id},
			CAST(#{sort_no} as integer),
			CASE WHEN #{use_yn} = true THEN '1' ELSE '0' end,
			#{remark},
			#{cre_usr},
			now(),
			#{mod_usr},
			now()
		)
	</insert>

	<update id="updateMngCodeInfo">
		UPDATE TB_CODE_MASTER
		SET 
			CD_NM = #{cd_nm},
			CD_ID = #{cd_id},
			SORT_NO = #{sort_no},
			USE_YN = CASE WHEN #{use_yn} = true THEN '1' ELSE '0' end,
			REMARK = #{remark},
			MOD_USR = #{mod_usr},
			MOD_DT = now()
		WHERE CD = #{cd}
		AND CATGR = #{catgr}
	</update>


	<update id="deleteMngCodeInfo">
		DELETE 
		FROM TB_CODE_MASTER
		WHERE CD = #{cd}
		AND CATGR = #{catgr}
	</update>

	<select id="selectMngCodeInfoTot" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
		FROM TB_CODE_MASTER
		WHERE 1 = 1
		<if test='CATGR != null'>
			AND CATGR = #{CATGR}
		</if>
	</select>

	<select id="selectCdNmCombo" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT CATGR,
		       CD,
		       LPAD(' ', 2 * (LEVEL - 1), '>') || CD_NM  AS CD_NM_PATH,
		       CD_NM,
		       SORT_NO,
		       DECODE(USE_YN,'0','false','true')  USE_YN  , 
		       LEVEL
		  FROM TB_CODE_MASTER
		 WHERE LEVEL <= 2
		 START WITH CATGR = 0
		CONNECT BY CATGR = PRIOR CD
	]]>
	</select>

	<select id="selectMngCodeInfoCombo" parameterType="hashMap"
		resultType="hashMap">
    	<![CDATA[
	    SELECT * 
        FROM TB_CODE_MASTER 
       ORDER BY SORT_NO
    	]]>
	</select>
</mapper>
